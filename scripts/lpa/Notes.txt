Git repo:
--------
- scripts/lpa_jan2014 : This folder contains the scripts used for running with VisIt
- scripts/lpa_jan2014/lpa_twocolor_viz : This folder contains the original scripts as provided by Jean-Luc Vay 

Oliver's Labtop:
----------------
export PATH=/Users/oruebel/Devel/Libraries/pyMPI:$PATH
./WarpVisIt.sh -np=4  --warp-script=/Users/oruebel/Devel/WarpVisIt/scripts/lpa_jan2014/lpa_twocolor_visit.py --visit-install=/Users/oruebel/Devel/visit/install --interactive --sim2-file=/Users/oruebel/Devel/testLPAtwocolor.sim2

Status:
------
- I was able to run the sim with VisIt and have VisIt tell the simulation to step, run, pause and kill
- Plotting results from the simulation in VisIt seemed to yield empty plots in most cases. Need to investigate why (e.g., is this a 2D vs. 3D issue in the interface classes?)
- For the grid, I was able to plot the grid itself, an expression of procid (looked correct),  rho (all 0's), and rank (all 3's). All other variales returned empty plots.
- For the particles I was not able to plot the mesh or any of the variables
- I did not receive any errors on the VisIt end (aside from warnings that the plots are empty). On the sim side I received the following types of messages:

VariableData's number of tuples must be greater than 0.
The data array does not contain any data
Error: 0 Warp failed to produce phi


Notes:
------
- It looks like in the script we have fixed number of steps, rather than the dynamically changing steps.
  Should we use 
       step(nint(560/dtcoef*float(nzplambda)/16))
  as max number of steps rather than step(3001*280) that is currently used?
- The use of global variables is problematic. Had to identify and declare all variables that
  were used in a global scope in the setup script
- Added option to disable the adding of the liveplots function to disable plots from Warp


Notes for large run:
--------------------

1) Change to high-res simulation by setting:

   1.1)  dtcoef = 0.25/4 instead of (which I believe means we have finer time stepping)
   1.2)  nx =1200 (i.e, 6 times higher transverse grid resolution)
   1.3)  nzplambda =60 (which should also be related to higher grid resolution

2) Change:
    return [0,E1*sin(angle1)] #Ey
    #return [E1*sin(angle1),0] #Ex
to
    #return [0,E1*sin(angle1)] #Ey
    return [E1*sin(angle1),0] #Ex


List of requested diagnostics:
------------------------------

- plasma electrons (species 'elec'):

  (a) x=x, z=z, y=uy, color=uz 

  (b) x=x, z=z, y=uz, color=uy 

- ionized electrons (species 'ielec'):

  (c) x=x, z=z, y=ux, color=uz 

- combo plasma + ionized electrons

  (d) plasma electrons (elec): x=x, z=z, y=0 (i.e. flat), color=ne (i.e. electron plasma density on grid)
        ionized electrons (ielec): x=x, z=z, y=color=uz
      Comment: The electron plasma density should be defined by the sum(weight) of the macro particles


For plasma electrons (elec):

  x=elec.getx() 
  z=elec.getz() 
  ux=elec.getux() 
  uy=elec.getuy() 
  uz=elec.getuz() 

For ionized electrons (ielec):

  x=ielec.getx() 
  z=ielec.getz() 
  ux=ielec.getux() 
  uy=ielec.getuy() 
  uz=ielec.getuz() 

  then one needs to remove 'halo' particles. Here is the way we do it in Python:

  # get rms values
  xrms = sqrt(var(x))
  yrms = sqrt(var(y))
  zrms = sqrt(var(z))
  uxrms = sqrt(var(ux))
  uyrms = sqrt(var(uy))
  uzrms = sqrt(var(uz))
  # get average values
  xave=ave(x)
  yave=ave(y)
  zave=ave(z)
  uxave=ave(ux)
  uyave=ave(uy)
  uzave=ave(uz)
  n=shape(x)[0]
  # get indices of particles inside 3*rms in 6-D phase-space
  ii=compress((abs(x-xave)<3*xrms) & \
              (abs(y-yave)<3*yrms) & \
              (abs(z-zave)<3*zrms) & \
              (abs(ux-uxave)<3*uxrms) & \
              (abs(uy-uyave)<3*uyrms) & \
              (abs(uz-uzave)<3*uzrms) \
              ,arange(n))
   n = len(ii)
   # get data without 'halo'
   if n>0:
     z=take(z,ii)
     x=take(x,ii)
     y=take(y,ii)
     ux=take(ux,ii)
     uy=take(uy,ii)
     uz=take(uz,ii)
   
It would be nice to have a movie with those four views together.

Let me know if you have questions.

